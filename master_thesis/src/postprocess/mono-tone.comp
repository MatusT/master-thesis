#version 460

layout(local_size_x = 8, local_size_y = 8, local_size_z = 1) in;

layout(push_constant) uniform PushConstants {
  vec2 size;
};

layout(set = 0, binding = 0) uniform sampler linear_sampler;

layout(set = 0, binding = 1) uniform texture2D input_texture;

layout(set = 0, binding = 2, rgba8) uniform writeonly image2D output_texture;

void main(void)
{
 vec2 uv = vec2(gl_GlobalInvocationID.xy) / size;
	
	const vec4 color = texture(sampler2D(input_texture, linear_sampler), uv).rgba;
	const float brightness = color.r + color.g + color.b;
	
	if(brightness > 0.3) {
		imageStore(output_texture, ivec2(gl_GlobalInvocationID.xy), vec4(color));
	} else {
		imageStore(output_texture, ivec2(gl_GlobalInvocationID.xy), vec4(0.0));
	}	
}


